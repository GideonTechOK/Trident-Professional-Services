name: Update README with Blog Posts

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate README
        run: |
          # Define markers
          blog_start_marker="<!-- BLOG-POSTS:START -->"
          blog_end_marker="<!-- BLOG-POSTS:END -->"
          header_start_marker="<!-- Header:START -->"
          header_end_marker="<!-- Header:END -->"

          # Read the existing README.md
          if [ -f README.md ]; then
            readme_content=$(cat README.md)
          else
            echo "README.md not found!"
            exit 1
          fi

          # Extract content before and after the blog and header markers
          content_before_header=$(echo "$readme_content" | sed -n "/$header_start_marker/ q; p")
          content_after_header=$(echo "$readme_content" | sed -n "1,/$header_end_marker/ d; p")
          content_before_blog=$(echo "$readme_content" | sed -n "/$blog_start_marker/ q; p")
          content_after_blog=$(echo "$readme_content" | sed -n "1,/$blog_end_marker/ d; p")

          # Read Info.md from the posts directory
          if [ -f posts/Info.md ]; then
            info_content=$(cat posts/Info.md)
          else
            info_content=""
          fi

          # Generate the new Blog Posts section
          new_blog_posts=""
          dir="posts"
          if [ -d "$dir" ]; then
            for file in "$dir"/*.md; do
              # Skip Info.md in the blog posts list
              if [ "$(basename "$file")" = "Info.md" ]; then
                continue
              fi
              if [ -f "$file" ]; then
                title=$(grep -m 1 '^# ' "$file" | sed 's/# //')
                link=$(basename "$file")
                new_blog_posts="${new_blog_posts}- [${title:-$(basename "$file" .md)}](posts/${link})"$'\n'
              fi
            done
          fi

          if [ -z "$new_blog_posts" ]; then
            new_blog_posts="No posts available."$'\n'
          fi

          # Reconstruct the README.md with updated content
          {
            echo "$content_before_header"
            echo "$header_start_marker"
            echo "$info_content"
            echo "$header_end_marker"
            echo "$content_after_header"
            echo "### Posts"
            echo "$blog_start_marker"
            echo "$new_blog_posts"
            echo "$blog_end_marker"
            echo "$content_after_blog"
          } > README.md

      - name: Commit and Push Changes
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

          if ! git diff --quiet; then
            git add README.md
            git commit -m "Update README with latest blog posts and info"
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi
